name: Deploy to AWS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AWS_REGION: us-east-1
  EB_APPLICATION_NAME: attendance-tracker
  EB_ENVIRONMENT_NAME: attendance-app-prod

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Run linting (if available)
      run: npm run lint || echo "No linting configured"
      continue-on-error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --production
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Setup Python for EB CLI
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install EB CLI
      run: |
        python -m pip install --upgrade pip
        pip install awsebcli --upgrade
    
    - name: Deploy to Elastic Beanstalk
      run: |
        eb init ${{ env.EB_APPLICATION_NAME }} --region ${{ env.AWS_REGION }} --platform "Node.js 18 running on 64bit Amazon Linux 2"
        eb deploy ${{ env.EB_ENVIRONMENT_NAME }} --timeout 20
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Get deployment URL
      run: |
        URL=$(eb status ${{ env.EB_ENVIRONMENT_NAME }} | grep "CNAME" | awk '{print $2}')
        echo "Application deployed at: http://$URL"
        echo "DEPLOYMENT_URL=http://$URL" >> $GITHUB_ENV
    
    - name: Health check
      run: |
        sleep 30  # Wait for deployment to stabilize
        curl -f ${{ env.DEPLOYMENT_URL }} || exit 1
        echo "Health check passed!"

  # deploy-ec2:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
  #   # Uncomment this job if you want to deploy to EC2 instead of Elastic Beanstalk
  #   # and comment out the deploy job above
  #   continue-on-error: true  # This job is optional
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   
  #   - name: Deploy to EC2
  #     uses: appleboy/ssh-action@v1.0.0
  #     with:
  #       host: ${{ secrets.EC2_HOST }}
  #       username: ${{ secrets.EC2_USERNAME }}
  #       key: ${{ secrets.EC2_PRIVATE_KEY }}
  #       script: |
  #         cd /home/ec2-user/attendance-app
  #         git pull origin main
  #         npm install --production
  #         pm2 restart attendance-app || pm2 start server.js --name "attendance-app"
  #         pm2 save 